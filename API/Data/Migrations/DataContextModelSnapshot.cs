// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Hadiths", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.Property<string>("Field2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Hadiths");
                });

            modelBuilder.Entity("API.Entities.TBible", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("BTags")
                        .HasColumnType("text");

                    b.Property<string>("BookTitle")
                        .HasColumnType("text");

                    b.Property<string>("Gita")
                        .HasColumnType("text");

                    b.Property<string>("MBs_version")
                        .HasColumnType("text");

                    b.Property<string>("Quran")
                        .HasColumnType("text");

                    b.Property<string>("REf")
                        .HasColumnType("text");

                    b.Property<string>("Readers_comment")
                        .HasColumnType("text");

                    b.Property<string>("SSGSahib")
                        .HasColumnType("text");

                    b.Property<string>("TextData")
                        .HasColumnType("text");

                    b.Property<int>("Verse_Length")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("tBible");
                });

            modelBuilder.Entity("API.Entities.tblsggs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("BTags")
                        .HasColumnType("text");

                    b.Property<string>("Bible")
                        .HasColumnType("text");

                    b.Property<string>("BookTitle")
                        .HasColumnType("text");

                    b.Property<string>("Gita")
                        .HasColumnType("text");

                    b.Property<string>("MBs_version")
                        .HasColumnType("text");

                    b.Property<string>("Quran")
                        .HasColumnType("text");

                    b.Property<string>("REf")
                        .HasColumnType("text");

                    b.Property<string>("Readers_comment")
                        .HasColumnType("text");

                    b.Property<string>("TextData")
                        .HasColumnType("text");

                    b.Property<int?>("Verse_Length")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("tblsggs");
                });

            modelBuilder.Entity("API.Entities.TGandhis_quotes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TGandhis_quotes");
                });

            modelBuilder.Entity("API.Entities.Tsggs_chapter___pages", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Chapter___ragas")
                        .HasColumnType("text");

                    b.Property<string>("Gurumkhi")
                        .HasColumnType("text");

                    b.Property<int>("Order_in_SGGS")
                        .HasColumnType("integer");

                    b.Property<int>("Page_Count")
                        .HasColumnType("integer");

                    b.Property<string>("Page_Range")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Tsggs_chapter___pages");
                });

            modelBuilder.Entity("API.Entities.tSGGS_Final", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Bible_Ref")
                        .HasColumnType("text");

                    b.Property<string>("Field1")
                        .HasColumnType("text");

                    b.Property<string>("Gita_Ref")
                        .HasColumnType("text");

                    b.Property<string>("Gurumukhi")
                        .HasColumnType("text");

                    b.Property<string>("Mb_version")
                        .HasColumnType("text");

                    b.Property<string>("QUran_Ref")
                        .HasColumnType("text");

                    b.Property<string>("Raag_Punjabi")
                        .HasColumnType("text");

                    b.Property<string>("Raag_Trans")
                        .HasColumnType("text");

                    b.Property<string>("Raag_english")
                        .HasColumnType("text");

                    b.Property<string>("Trans")
                        .HasColumnType("text");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<double>("line_number")
                        .HasColumnType("double precision");

                    b.Property<string>("page_No")
                        .HasColumnType("text");

                    b.Property<string>("vERSE")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tSGGS_Final");
                });

            modelBuilder.Entity("API.Entities.tswami_gita_scsv", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Bible_Link")
                        .HasColumnType("text");

                    b.Property<string>("COMMENT")
                        .HasColumnType("text");

                    b.Property<string>("Chapter")
                        .HasColumnType("text");

                    b.Property<string>("Gita")
                        .HasColumnType("text");

                    b.Property<string>("IGS")
                        .HasColumnType("text");

                    b.Property<string>("MBVersion")
                        .HasColumnType("text");

                    b.Property<double>("NUMBER")
                        .HasColumnType("double precision");

                    b.Property<string>("Quran")
                        .HasColumnType("text");

                    b.Property<string>("SSGSahib")
                        .HasColumnType("text");

                    b.Property<string>("TRANSLITERATION")
                        .HasColumnType("text");

                    b.Property<string>("VERSE")
                        .HasColumnType("text");

                    b.Property<string>("readers_Comments")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tswami_gita_scsv");
                });

            modelBuilder.Entity("API.Entities.ytquran", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Bible_Link")
                        .HasColumnType("text");

                    b.Property<double?>("ChaperNVerse")
                        .HasColumnType("double precision");

                    b.Property<string>("Commentary")
                        .HasColumnType("text");

                    b.Property<string>("Gita_Link")
                        .HasColumnType("text");

                    b.Property<bool>("IDs")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("MB_s_Version")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("OrderRevealed")
                        .HasColumnType("text");

                    b.Property<string>("Sura")
                        .HasColumnType("text");

                    b.Property<int?>("VLen")
                        .HasColumnType("integer");

                    b.Property<string>("Verse")
                        .HasColumnType("text");

                    b.Property<string>("truncated_")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("ytquran");
                });

            modelBuilder.Entity("API.Entities.zTbible_Chapter_Names", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Field2")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("zTbible_Chapter_Names");
                });

            modelBuilder.Entity("API.Entities.Ztgita_Full", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Field1")
                        .HasColumnType("integer");

                    b.Property<string>("Readers_Comments")
                        .HasColumnType("text");

                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.Property<string>("Verse")
                        .HasColumnType("text");

                    b.Property<int?>("Verse_Length")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Ztgita_Full");
                });
#pragma warning restore 612, 618
        }
    }
}
